[versions]
# libraries
junit = "4.13.2"
opentest4j = "1.3.0"
junitJupiter = "5.10.0"
junitJupiterEngine = "5.9.2"
junitPlatformLauncher = "1.11.4"
remoteRobot = "0.11.23"
okhttpLogging = "4.12.0"
videoRecorderJunit5 = "2.0"

# plugins
changelog = "2.2.1"
intelliJPlatform = "2.6.0"
kotlin = "2.1.21"
kover = "0.9.1"
qodana = "2025.1.1"

[libraries]
junit = { group = "junit", name = "junit", version.ref = "junit" }
opentest4j = { group = "org.opentest4j", name = "opentest4j", version.ref = "opentest4j" }

# JUnit 5 (Jupiter)
junit-jupiter-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junitJupiter" }
junit-jupiter-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junitJupiterEngine" }
junit-platform-launcher = { group = "org.junit.platform", name = "junit-platform-launcher", version.ref = "junitPlatformLauncher" }

# Remote Robot for UI tests
remote-robot = { group = "com.intellij.remoterobot", name = "remote-robot", version.ref = "remoteRobot" }
remote-fixtures = { group = "com.intellij.remoterobot", name = "remote-fixtures", version.ref = "remoteRobot" }

# Logging Network Calls for tests
okhttp-loggingInterceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttpLogging" }

# Video Recording for tests
video-recorder-junit5 = { group = "com.automation-remarks", name = "video-recorder-junit5", version.ref = "videoRecorderJunit5" }

[plugins]
changelog = { id = "org.jetbrains.changelog", version.ref = "changelog" }
intelliJPlatform = { id = "org.jetbrains.intellij.platform", version.ref = "intelliJPlatform" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
qodana = { id = "org.jetbrains.qodana", version.ref = "qodana" }

[bundles]
# Groups related dependencies together for a cleaner build script.
remoterobot = [ "remote-robot", "remote-fixtures" ]