# GitHub Actions Workflow for launching UI tests on Linux, Windows, and Mac in the following steps:
# - Prepare and launch IDE with your plugin and robot-server plugin, which is needed to interact with the UI.
# - Wait for IDE to start.
# - Run UI tests with a separate Gradle task.
#
# Please check https://github.com/JetBrains/intellij-ui-test-robot for information about UI tests with IntelliJ Platform.
#
# Workflow is triggered manually.

name: Run UI Tests
on:
  workflow_dispatch

jobs:
  run-ui-test:
    name: run tests for ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            runIde: |
              export DISPLAY=:99.0
              Xvfb -ac :99 -screen 0 1920x1080x24 &
              sleep 10
              mkdir -p build/reports
              ./gradlew runIdeForUiTests --scan > build/reports/idea.log &
            runTests: |
              export DISPLAY=:99.0
              ./gradlew test
            url: http://127.0.0.1:8082
            reportName: ui-test-fails-report-linux
          - os: macOS-latest
            runIde: ./gradlew runIdeForUiTests --scan &
            runTests: ./gradlew test
            url: http://127.0.0.1:8082
            reportName: ui-test-fails-report-mac
          - os: windows-latest
            runIde: start gradlew.bat runIdeForUiTests --scan
            runTests: ./gradlew test
            url: http://localhost:8082
            reportName: ui-test-fails-report-windows

    runs-on: ${{ matrix.os }}
    steps:

      # Check out the current repository
      - name: Fetch Sources
        uses: actions/checkout@v4

      # Set up Java environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 21

      - name: Setup FFmpeg
        uses: FedericoCarboni/setup-ffmpeg@v2
        # with:
          # Not strictly necessary, but it may prevent rate limit
          # errors especially on GitHub-hosted macos machines.
          # token: ${{ secrets.GITHUB_TOKEN }}

      # Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # Run IDEA prepared for UI testing
      - name: Run IDE
        run: ${{ matrix.runIde }}

      # Wait for IDEA to be started
      - name: Health Check
        uses: jtalk/url-health-check-action@v4
        with:
          url: ${{ matrix.url }}
          max-attempts: 4
          retry-delay: 30s

      # Run tests
      - name: Run tests
        run: ${{ matrix.runTests }}

      - name: Move video
        if: ${{ failure() }}
        run: mv video build/reports

      - name: Copy logs
        if: ${{ failure() }}
        run: mv build/idea-sandbox/system/log/ build/reports

      - name: Save fails report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.reportName }}
          path: |
            build/reports
